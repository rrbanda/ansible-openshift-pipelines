apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: promote-playbook
spec:
  params:
    - name: target-repo-url
      type: string
    - name: pr-base-branch
      type: string
    - name: target-branch
      type: string
      default: main
  workspaces:
    - name: shared
  steps:
    - name: promote
      image: debian:bullseye
      workingDir: $(workspaces.shared.path)
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-creds
              key: token
      script: |
        #!/bin/bash
        set -euo pipefail

        echo "üì¶ Installing dependencies..."
        apt-get update -qq
        apt-get install -y git curl jq tar

        echo "‚¨áÔ∏è Installing gh CLI..."
        GH_VERSION=$(curl -s https://api.github.com/repos/cli/cli/releases/latest | jq -r .tag_name)
        curl -sSL https://github.com/cli/cli/releases/download/${GH_VERSION}/gh_${GH_VERSION#v}_linux_amd64.tar.gz -o gh.tgz
        tar -xzf gh.tgz
        mv gh_${GH_VERSION#v}_linux_amd64/bin/gh /usr/local/bin/
        chmod +x /usr/local/bin/gh

        echo "üîê Cloning repo..."
        rm -rf repo && mkdir repo
        cd repo
        git config --global user.email "tekton@example.com"
        git config --global user.name "tekton"
        git clone https://oauth2:${GITHUB_TOKEN}@$(params.target-repo-url) .
        git checkout "$(params.pr-base-branch)"
        git pull origin "$(params.pr-base-branch)"

        BRANCH=promote-$(date +%s)
        git checkout -b $BRANCH

        echo "üßπ Removing old ansible/ directory if exists..."
        rm -rf ansible && mkdir -p ansible

        echo "üì• Copying playbooks that passed lint..."
        cp -v $(workspaces.shared.path)/passed/*.yml ansible/ || echo "No passed playbooks"

        echo "üßæ Generating lint-summary.md..."
        {
          echo "# Lint Summary Report"
          echo ""
          echo "| Playbook | Status |"
          echo "|----------|--------|"
          for file in $(workspaces.shared.path)/passed/*.yml; do
            [ -e "$file" ] || continue
            echo "| $(basename $file) | ‚úÖ Passed |"
          done
          for file in $(workspaces.shared.path)/failed/*.yml; do
            [ -e "$file" ] || continue
            echo "| $(basename $file) | ‚ùå Failed |"
          done
          echo ""
          echo "_Generated on $(date)_"
        } > lint-summary.md

        git add ansible/ lint-summary.md
        git commit -m "Promote clean playbooks to main"
        git push https://oauth2:${GITHUB_TOKEN}@$(params.target-repo-url) $BRANCH

        echo "üì§ Creating PR..."
        gh auth setup-git
        PR_URL=$(gh pr create \
          --base "$(params.pr-base-branch)" \
          --head "$BRANCH" \
          --title "Promote to $(params.pr-base-branch)" \
          --body "‚úÖ Passed playbooks added to ansible/. See lint-summary.md")

        echo "üí¨ Commenting lint summary..."
        gh pr comment "$PR_URL" --body "$(cat lint-summary.md)"

        if [ "$(ls -A $(workspaces.shared.path)/passed 2>/dev/null)" ]; then
          echo "‚úÖ Passed playbooks present. Auto-merging..."
          gh pr merge "$PR_URL" --merge --admin
        else
          echo "‚ùå No playbooks passed lint. Cleaning up PR branch..."
          git push origin --delete "$BRANCH"
          echo "‚ùå Pipeline failed due to lint. Exiting..."
          exit 1
        fi
